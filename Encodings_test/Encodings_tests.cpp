#include "stdafx.h"
#include "CppUnitTest.h"

#include "Base64.h"


using namespace Microsoft::VisualStudio::CppUnitTestFramework;
using namespace Base64;


namespace Encodings_test
{

	TEST_CLASS(Encodings_tests)
	{
	public:
		
		TEST_METHOD(TestBase64)
		{
			std::string str1 = "Power overwhelming";	// length is 18 (18 % 3 == 0)
			std::string str2 = "Hello, world!";			// length is 13 (13 % 3 == 1)
			std::string str3 = "Show me the money";		// length is 17 (17 % 3 == 2)

			std::string res;
			
			res = Base64_Encode(str1);
			Assert::IsTrue(res.compare("UG93ZXIgb3ZlcndoZWxtaW5n") == 0, L"Base64 encoding error."); // Generated by the independent base64 encoder
			res = Base64_Decode(res);
			Assert::IsTrue(str1.compare(res) == 0, L"Base64 decoding error.");

			res = Base64_Encode(str2);
			Assert::IsTrue(res.compare("SGVsbG8sIHdvcmxkIQ==") == 0, L"Base64 encoding error."); // Generated by the independent base64 encoder
			res = Base64_Decode(res);
			Assert::IsTrue(str2.compare(res) == 0, L"Base64 decoding error.");

			res = Base64_Encode(str3);
			Assert::IsTrue(res.compare("U2hvdyBtZSB0aGUgbW9uZXk=") == 0, L"Base64 encoding error."); // Generated by the independent base64 encoder
			res = Base64_Decode(res);
			Assert::IsTrue(str3.compare(res) == 0, L"Base64 decoding error.");

			Logger::WriteMessage("Base64 encoding and decoding are OK.");
		}

	};

}
